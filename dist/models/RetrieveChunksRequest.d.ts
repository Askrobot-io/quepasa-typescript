/**
 * QuePasa RAG SaaS API
 * API for RAG retrieval, managing documents, files, and related operations including Telegram integration.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { RetrieveRequestUserInfo } from './RetrieveRequestUserInfo';
import type { RetrieveRelevanceWeights } from './RetrieveRelevanceWeights';
import type { RetrieveFormulaRelevanceWeights } from './RetrieveFormulaRelevanceWeights';
/**
 *
 * @export
 * @interface RetrieveChunksRequest
 */
export interface RetrieveChunksRequest {
    /**
     * Natural language query to retrieve or answer.
     * @type {string}
     * @memberof RetrieveChunksRequest
     */
    question: string;
    /**
     * The name of a group of documents.
     * @type {string|Array<string>}
     * @memberof RetrieveChunksRequest
     */
    domain?: string | Array<string>;
    /**
     * A hybrid ranking formula for documents, balancing two parameters: text for full-text search and semantic for semantic search. The format allows you to adjust the weight of each component.
     *
     * @type {RetrieveFormulaRelevanceWeights}
     * @memberof RetrieveChunksRequest
     */
    relevance_weights?: RetrieveFormulaRelevanceWeights;
    /**
     *
     * @type {RetrieveRelevanceWeights}
     * @memberof RetrieveChunksRequest
     */
    document_relevance_weights?: RetrieveRelevanceWeights;
    /**
     *
     * @type {RetrieveRelevanceWeights}
     * @memberof RetrieveChunksRequest
     */
    chunk_relevance_weights?: RetrieveRelevanceWeights;
    /**
     * A prompt template used by the reranking model to prioritize and reorder both documents and chunks based on their relevance to a query.
     * This prompt guides the model in assessing the importance of each document and refining the ranking output.
     *
     * @type {string}
     * @memberof RetrieveAnswerRequest
     */
    reranker_prompt?: string;
    /**
     * A prompt template used by the reranking model to prioritize and reorder documents based on their relevance to a query.
     * This prompt guides the model in assessing the importance of each document and refining the ranking output.
     *
     * @type {string}
     * @memberof RetrieveAnswerRequest
     */
    document_reranker_prompt?: string;
    /**
     * A prompt template used by the reranking model to prioritize and reorder chunks based on their relevance to a query.
     * This prompt guides the model in assessing the importance of each document and refining the ranking output.
     *
     * @type {string}
     * @memberof RetrieveAnswerRequest
     */
    chunk_reranker_prompt?: string;
    /**
     * User info to track requests.
     * @type {RetrieveRequestUserInfo}
     * @memberof RetrieveAnswerRequest
     */
    userInfo?: RetrieveRequestUserInfo;
}
/**
 * Check if a given object implements the RetrieveChunksRequest interface.
 */
export declare function instanceOfRetrieveChunksRequest(value: object): value is RetrieveChunksRequest;
export declare function RetrieveChunksRequestFromJSON(json: any): RetrieveChunksRequest;
export declare function RetrieveChunksRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RetrieveChunksRequest;
export declare function RetrieveChunksRequestToJSON(value?: RetrieveChunksRequest | null): any;
