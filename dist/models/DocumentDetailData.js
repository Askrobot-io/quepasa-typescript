"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * QuePasa RAG SaaS API
 * API for RAG retrieval, managing documents, files, and related operations including Telegram integration.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfDocumentDetailData = instanceOfDocumentDetailData;
exports.DocumentDetailDataFromJSON = DocumentDetailDataFromJSON;
exports.DocumentDetailDataFromJSONTyped = DocumentDetailDataFromJSONTyped;
exports.DocumentDetailDataToJSON = DocumentDetailDataToJSON;
const DocumentDetailDataPagesInner_1 = require("./DocumentDetailDataPagesInner");
/**
 * Check if a given object implements the DocumentDetailData interface.
 */
function instanceOfDocumentDetailData(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('url' in value) || value['url'] === undefined)
        return false;
    if (!('domain' in value) || value['domain'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('keywords' in value) || value['keywords'] === undefined)
        return false;
    if (!('pages' in value) || value['pages'] === undefined)
        return false;
    if (!('languages' in value) || value['languages'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function DocumentDetailDataFromJSON(json) {
    return DocumentDetailDataFromJSONTyped(json, false);
}
function DocumentDetailDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'url': json['url'],
        'domain': json['domain'],
        'title': json['title'],
        'keywords': json['keywords'],
        'pages': (json['pages'].map(DocumentDetailDataPagesInner_1.DocumentDetailDataPagesInnerFromJSON)),
        'languages': json['languages'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}
function DocumentDetailDataToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'url': value['url'],
        'domain': value['domain'],
        'title': value['title'],
        'keywords': value['keywords'],
        'pages': (value['pages'].map(DocumentDetailDataPagesInner_1.DocumentDetailDataPagesInnerToJSON)),
        'languages': value['languages'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}
