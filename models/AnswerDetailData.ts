/* tslint:disable */
/* eslint-disable */
/**
 * QuePasa RAG SaaS API
 * API for RAG retrieval, managing documents, files, and related operations including Telegram integration.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnswerDetailDataLabeledLinksValue } from './AnswerDetailDataLabeledLinksValue';
import {
    AnswerDetailDataLabeledLinksValueFromJSON,
    AnswerDetailDataLabeledLinksValueFromJSONTyped,
    AnswerDetailDataLabeledLinksValueToJSON,
} from './AnswerDetailDataLabeledLinksValue';
import type { AnswerDetailDataLinksValue } from './AnswerDetailDataLinksValue';
import {
    AnswerDetailDataLinksValueFromJSON,
    AnswerDetailDataLinksValueFromJSONTyped,
    AnswerDetailDataLinksValueToJSON,
} from './AnswerDetailDataLinksValue';

/**
 * 
 * @export
 * @interface AnswerDetailData
 */
export interface AnswerDetailData {
    /**
     * The answer generated in response to the query.
     * @type {string}
     * @memberof AnswerDetailData
     */
    answer?: string;
    /**
     * A list of references used in the generated answer.
     * @type {{ [key: string]: AnswerDetailDataLinksValue; }}
     * @memberof AnswerDetailData
     */
    links?: { [key: string]: AnswerDetailDataLinksValue; };
    /**
     * Answer formatted in Markdown, with links.
     * @type {string}
     * @memberof AnswerDetailData
     */
    markdown?: string;
    /**
     * References in Markdown format.
     * @type {{ [key: string]: AnswerDetailDataLabeledLinksValue; }}
     * @memberof AnswerDetailData
     */
    labeledLinks?: { [key: string]: AnswerDetailDataLabeledLinksValue; };
}

/**
 * Check if a given object implements the AnswerDetailData interface.
 */
export function instanceOfAnswerDetailData(value: object): value is AnswerDetailData {
    return true;
}

export function AnswerDetailDataFromJSON(json: any): AnswerDetailData {
    return AnswerDetailDataFromJSONTyped(json, false);
}

export function AnswerDetailDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnswerDetailData {
    if (json == null) {
        return json;
    }
    return {
        
        'answer': json['answer'] == null ? undefined : json['answer'],
        'links': json['links'] == null ? undefined : (mapValues(json['links'], AnswerDetailDataLinksValueFromJSON)),
        'markdown': json['markdown'] == null ? undefined : json['markdown'],
        'labeledLinks': json['labeled_links'] == null ? undefined : (mapValues(json['labeled_links'], AnswerDetailDataLabeledLinksValueFromJSON)),
    };
}

export function AnswerDetailDataToJSON(value?: AnswerDetailData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'answer': value['answer'],
        'links': value['links'] == null ? undefined : (mapValues(value['links'], AnswerDetailDataLinksValueToJSON)),
        'markdown': value['markdown'],
        'labeled_links': value['labeledLinks'] == null ? undefined : (mapValues(value['labeledLinks'], AnswerDetailDataLabeledLinksValueToJSON)),
    };
}

