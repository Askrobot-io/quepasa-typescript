/* tslint:disable */
/* eslint-disable */
/**
 * QuePasa RAG SaaS API
 * API for RAG retrieval, managing documents, files, and related operations including Telegram integration.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentDetailDataPagesInner } from './DocumentDetailDataPagesInner';
import {
    DocumentDetailDataPagesInnerFromJSON,
    DocumentDetailDataPagesInnerFromJSONTyped,
    DocumentDetailDataPagesInnerToJSON,
} from './DocumentDetailDataPagesInner';

/**
 * 
 * @export
 * @interface DocumentDetailData
 */
export interface DocumentDetailData {
    /**
     * Unique identifier for the document.
     * @type {string}
     * @memberof DocumentDetailData
     */
    id: string;
    /**
     * Original URL of the document.
     * @type {string}
     * @memberof DocumentDetailData
     */
    url: string;
    /**
     * The name of a group of documents. Defaults to "default".
     * @type {string}
     * @memberof DocumentDetailData
     */
    domain: string;
    /**
     * Optional keywords for search optimization.
     * @type {string}
     * @memberof DocumentDetailData
     */
    title: string;
    /**
     * Optional keywords for search optimization.
     * @type {string}
     * @memberof DocumentDetailData
     */
    keywords: string;
    /**
     * 
     * @type {Array<DocumentDetailDataPagesInner>}
     * @memberof DocumentDetailData
     */
    pages: Array<DocumentDetailDataPagesInner>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DocumentDetailData
     */
    languages: Array<string>;
    /**
     * Creation date in ISO 8601 format.
     * @type {Date}
     * @memberof DocumentDetailData
     */
    createdAt: Date;
    /**
     * Update date in ISO 8601 format.
     * @type {Date}
     * @memberof DocumentDetailData
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the DocumentDetailData interface.
 */
export function instanceOfDocumentDetailData(value: object): value is DocumentDetailData {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('domain' in value) || value['domain'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('keywords' in value) || value['keywords'] === undefined) return false;
    if (!('pages' in value) || value['pages'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function DocumentDetailDataFromJSON(json: any): DocumentDetailData {
    return DocumentDetailDataFromJSONTyped(json, false);
}

export function DocumentDetailDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentDetailData {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'],
        'domain': json['domain'],
        'title': json['title'],
        'keywords': json['keywords'],
        'pages': ((json['pages'] as Array<any>).map(DocumentDetailDataPagesInnerFromJSON)),
        'languages': json['languages'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function DocumentDetailDataToJSON(value?: DocumentDetailData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'url': value['url'],
        'domain': value['domain'],
        'title': value['title'],
        'keywords': value['keywords'],
        'pages': ((value['pages'] as Array<any>).map(DocumentDetailDataPagesInnerToJSON)),
        'languages': value['languages'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

