/* tslint:disable */
/* eslint-disable */
/**
 * QuePasa RAG SaaS API
 * API for RAG retrieval, managing documents, files, and related operations including Telegram integration.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentPagesInner } from './DocumentPagesInner';
import {
    DocumentPagesInnerFromJSON,
    DocumentPagesInnerFromJSONTyped,
    DocumentPagesInnerToJSON,
} from './DocumentPagesInner';

/**
 * 
 * @export
 * @interface Document
 */
export interface Document {
    /**
     * Unique identifier for the document.
     * @type {string}
     * @memberof Document
     */
    id: string;
    /**
     * Original URL of the document.
     * @type {string}
     * @memberof Document
     */
    url: string;
    /**
     * Raw text content of the document.
     * @type {string}
     * @memberof Document
     */
    text?: string;
    /**
     * Raw HTML content of the document.
     * @type {string}
     * @memberof Document
     */
    html?: string;
    /**
     * Raw Markdown content of the document.
     * @type {string}
     * @memberof Document
     */
    markdown?: string;
    /**
     * 
     * @type {Array<DocumentPagesInner>}
     * @memberof Document
     */
    pages?: Array<DocumentPagesInner>;
    /**
     * Two-character language code (e.g., 'en').
     * @type {string}
     * @memberof Document
     */
    language?: string;
    /**
     * Optional title of the document.
     * @type {string}
     * @memberof Document
     */
    title?: string;
    /**
     * Optional keywords for search optimization.
     * @type {string}
     * @memberof Document
     */
    keywords?: string;
    /**
     * Creation date in ISO 8601 format.
     * @type {Date}
     * @memberof Document
     */
    createdAt?: Date;
    /**
     * Update date in ISO 8601 format.
     * @type {Date}
     * @memberof Document
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the Document interface.
 */
export function instanceOfDocument(value: object): value is Document {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function DocumentFromJSON(json: any): Document {
    return DocumentFromJSONTyped(json, false);
}

export function DocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Document {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'],
        'text': json['text'] == null ? undefined : json['text'],
        'html': json['html'] == null ? undefined : json['html'],
        'markdown': json['markdown'] == null ? undefined : json['markdown'],
        'pages': json['pages'] == null ? undefined : ((json['pages'] as Array<any>).map(DocumentPagesInnerFromJSON)),
        'language': json['language'] == null ? undefined : json['language'],
        'title': json['title'] == null ? undefined : json['title'],
        'keywords': json['keywords'] == null ? undefined : json['keywords'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function DocumentToJSON(value?: Document | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'url': value['url'],
        'text': value['text'],
        'html': value['html'],
        'markdown': value['markdown'],
        'pages': value['pages'] == null ? undefined : ((value['pages'] as Array<any>).map(DocumentPagesInnerToJSON)),
        'language': value['language'],
        'title': value['title'],
        'keywords': value['keywords'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

