/* tslint:disable */
/* eslint-disable */
/**
 * QuePasa RAG SaaS API
 * API for RAG retrieval, managing documents, files, and related operations including Telegram integration.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BatchStatusData } from './BatchStatusData';
import {
    BatchStatusDataFromJSON,
    BatchStatusDataFromJSONTyped,
    BatchStatusDataToJSON,
} from './BatchStatusData';

/**
 * 
 * @export
 * @interface BatchStatus
 */
export interface BatchStatus {
    /**
     * Status of the batch (e.g., "uploaded", "backlog", "in_progress", "done").
     * Possible values:
     * - Batch state: uploaded
     * - Batch state: backlog
     * - Batch state: in_progress
     * - Batch state: done
     * 
     * @type {string}
     * @memberof BatchStatus
     */
    status: string;
    /**
     * 
     * @type {BatchStatusData}
     * @memberof BatchStatus
     */
    data?: BatchStatusData;
}

/**
 * Check if a given object implements the BatchStatus interface.
 */
export function instanceOfBatchStatus(value: object): value is BatchStatus {
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function BatchStatusFromJSON(json: any): BatchStatus {
    return BatchStatusFromJSONTyped(json, false);
}

export function BatchStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): BatchStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'data': json['data'] == null ? undefined : BatchStatusDataFromJSON(json['data']),
    };
}

export function BatchStatusToJSON(value?: BatchStatus | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'status': value['status'],
        'data': BatchStatusDataToJSON(value['data']),
    };
}

